name: CI
on:
  push:
  workflow_dispatch:
jobs:
  test-sdk-mta:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        archetype: ['cf-spring', 'cf-tomee']
    steps:
      - run: mvn -v
      - name: Generate test project
        run: |
          mvn archetype:generate -B -DarchetypeGroupId=com.sap.cloud.sdk.archetypes -DgroupId=mydemo -DartifactId=cloud-sdk-${{ matrix.archetype }}-archetype -DskipUsageAnalytics=true -Dversion=1.0 -DarchetypeArtifactId=scp-${{ matrix.archetype }} -DarchetypeVersion=LATEST
          cp -r cloud-sdk-${{ matrix.archetype }}-archetype/* .
          rm -rf cloud-sdk-${{ matrix.archetype }}-archetype
          wget https://gist.githubusercontent.com/fwilhe/0bc0848e9cc2487114c3c96060acbfc7/raw/2639331f9a1502c487000017f7b70db25b825ff6/mta-${{ matrix.archetype }}.yaml
          mv mta*yaml mta.yaml
      - run: curl -L "https://github.com/SAP/cloud-mta-build-tool/releases/download/v1.0.15/cloud-mta-build-tool_1.0.15_Linux_amd64.tar.gz" | sudo tar -zx -C /usr/local/bin

      - name: mtaBuild
        uses: SAP/project-piper-action@master
        with:
          command: mtaBuild
          flags: "--installArtifacts"
          piper-version: master

      - name: mavenExecuteIntegration
        uses: SAP/project-piper-action@master
        with:
          command: mavenExecuteIntegration
          piper-version: master

      - run: mvn clean; rm demo.mtar

      - uses: 'actions/upload-artifact@v2'
        with:
            name: Cloud SDK ${{ matrix.archetype }} MTA project template
            path: ${{ github.workspace }}

  test-sdk-mta-js:
    runs-on: ubuntu-latest
    steps:
      - run: |
          wget https://github.com/SAP/cloud-s4-sdk-book/archive/mta-js.zip
          unzip mta-js.zip
          rm mta-js.zip
          cp -r cloud-s4-sdk-book-mta-js/* .
          rm -rf cloud-s4-sdk-book-mta-js
      - run: curl -L "https://github.com/SAP/cloud-mta-build-tool/releases/download/v1.0.15/cloud-mta-build-tool_1.0.15_Linux_amd64.tar.gz" | sudo tar -zx -C /usr/local/bin

      - name: mtaBuild
        uses: SAP/project-piper-action@master
        with:
          command: mtaBuild
          piper-version: master

      - run: rm -rf node_modules mta-js-demo.mtar

      - uses: 'actions/upload-artifact@v2'
        with:
            name: Cloud SDK js MTA project template
            path: ${{ github.workspace }}

  create-release:
    runs-on: ubuntu-latest
    needs: [test-sdk-mta, test-sdk-mta-js]
    steps:
      - name: get timestamp
        id: time
        run: echo "::set-output name=time::`date -u +\"%Y-%m-%dT%H-%M-%S%Z\"`"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.time.outputs.time }}
      - run: echo "${{ steps.create_release.outputs.upload_url }}" > upload-url.txt
      - name: Upload url result for job 1
        uses: actions/upload-artifact@v1
        with:
          name: url
          path: upload-url.txt


  release-artifacts:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        archetype: ['cf-spring', 'cf-tomee', js]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: Cloud SDK ${{ matrix.archetype }} MTA project template
          path: ${{ github.workspace }}/${{ matrix.archetype }}
      - run: zip -r mta-${{ matrix.archetype }}.zip ${{ matrix.archetype }}

      - name: Download url
        uses: actions/download-artifact@v1
        with:
          name: url
      - name: get url
        id: url
        run: echo "::set-output name=upload_url::`cat url/upload-url.txt`"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.url.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./mta-${{ matrix.archetype }}.zip
          asset_name: mta-${{ matrix.archetype }}.zip
          asset_content_type: application/zip
